stepCount$value[i]
totstepsseq[stepCount[i]$secFromStart / 900]
totstepsseq[stepCount$secFromStart / 900] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart / 900]
stepCount$secFromStart / 900
totstepsseq[stepCount$secFromStart[i] / 900] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900]
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
range(stepCount$midtime)[1]
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=900)
range(stepCount$midtime)[1]
# Dylan O'Connell
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
range(stepCount$midtime)
# every 5 minutes from the start until the end of our dataset
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=900)
stepCount$midtime[1]
class(stepCount$midtime)
class(stepCount$value)
source('~/Documents/Programming/HealthData/HealthDataCleaning.R', echo=TRUE)
plot(totstepsseq,timeseq)
totstepsseq
totstepsseq[stepCount$secFromStart[200] / 900] <-
totstepsseq[stepCount$secFromStart[200] / 900] +
stepCount$value[200]
totstepsseq[stepCount$secFromStart[200] / 900]
plot(timeseq,totstepsseq)
tail(totstepseq)
tail(totstepsseq)
summary(totstepsseq)
stepCount$secFromStart[200]
stepCount$secFromStart[200] / 900
stepCount$middate
stepCount$midtime
stepCount$midtime[200]
timeseq[stepCount$secFromStart[200] / 900]
timeseq[stepCount$secFromStart[200] / 900 - 1]
timeseq[stepCount$secFromStart[200] / 900 - + 1]
timeseq[stepCount$secFromStart[200] / 900 + 1]
timeseq[stepCount$secFromStart[200] / 900 ]
timeseq[stepCount$secFromStart[200] / 900 - 1]
stepCount$midtime[200]
stepCount$midtime[200]
timeseq[stepCount$secFromStart[200] / 900 ]
timeseq[stepCount$secFromStart[200] / 900 + 1]
timeseq[stepCount$secFromStart[200] / 900 + 2]
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=900)
totstepsseq <- rep(0, length(timeseq))
time.start <- as.numeric(range(stepCount$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
stepCount$secFromStart <- as.integer(stepCount$midtime) - time.start
for(i in length(stepCount$secFromStart)){
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
summary(totstepsseq)
for(i in length(stepCount$secFromStart)){
print(stepCount$value[i])
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
length(stepCount$secFromStart)
for(i in length(stepCount$secFromStart)){
print("1")
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
for(i in length(stepCount$secFromStart)){
print(stepcount$secFromStart[i])
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
for(i in length(stepCount$secFromStart)){
print(stepCount$secFromStart[i])
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
for(i in length(stepCount$secFromStart)){
print(stepCount$secFromStart[i])
print(i)
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=900)
totstepsseq <- rep(0, length(timeseq))
time.start <- as.numeric(range(stepCount$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
stepCount$secFromStart <- as.integer(stepCount$midtime) - time.start
for(i in 1:length(stepCount$secFromStart)){
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
plot(totstepsseq,timeseq)
summary(totstepsseq)
summary(timeseq)
length(timeseq)
length(totstepsseq)
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=900)
totstepsseq <- rep(0, length(timeseq))
length(totstepsseq)
length(timeseq)
totstepsseq <- totstepsseq[1:length(timeseq)]
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=900)
totstepsseq <- rep(0, length(timeseq))
time.start <- as.numeric(range(stepCount$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
stepCount$secFromStart <- as.integer(stepCount$midtime) - time.start
for(i in 1:length(stepCount$secFromStart)){
totstepsseq[stepCount$secFromStart[i] / 900 ] <- totstepsseq[stepCount$secFromStart[i] / 900] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 1] <- totstepsseq[stepCount$secFromStart[i] / 900 + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / 900 + 2] <- totstepsseq[stepCount$secFromStart[i] / 900 + 2] + stepCount$value[i]
}
length(totstepsseq)
totstepsseq <- totstepsseq[1:length(timeseq)]
length(totstepsseq)
plot(totstepsseq,timeseq)
plot(ttimeseq,otstepsseq)
plot(timeseq,totstepsseq)
?increment
time.interval = 900
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
time.start <- as.numeric(range(stepCount$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
stepCount$secFromStart <- as.integer(stepCount$midtime) - time.start
for(i in 1:length(stepCount$secFromStart)){
totstepsseq[stepCount$secFromStart[i] / time.interval ] <- totstepsseq[stepCount$secFromStart[i] / time.interval] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / time.interval + 1] <- totstepsseq[stepCount$secFromStart[i] / time.interval + 1] + stepCount$value[i]
totstepsseq[stepCount$secFromStart[i] / time.interval + 2] <- totstepsseq[stepCount$secFromStart[i] / time.interval + 2] + stepCount$value[i]
}
totstepsseq <- totstepsseq[1:length(timeseq)]
plot(timeseq,totstepsseq)
summary(totstepsseq)
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
stepCount$midtime <- as.POSIXct(stepCount)
x <- stepCount
# every 5 minutes from the start until the end of our dataset
time.interval = 900
timeseq <- seq(from=range(stepCount$midtime)[1], to=range(stepCount$midtime)[2], by=time.interval)
stepCount$midtime
stepCount$midtime <- as.POSIXct(stepCount$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
stepCount$midtime
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
stepCount$midtime <- as.POSIXct(stepCount$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
x <- stepCount
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
stepCount$midtime <- as.POSIXct(stepCount$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
x <- stepCount
# every 5 minutes from the start until the end of our dataset
time.interval = 900
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
time.start <- as.numeric(range(x$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
x$secFromStart <- as.integer(x$midtime) - time.start
for(i in 1:length(stepCount$secFromStart)){
totstepsseq[x$secFromStart[i] / time.interval ] <- totstepsseq[x$secFromStart[i] / time.interval] + x$value[i]
totstepsseq[x$secFromStart[i] / time.interval + 1] <- totstepsseq[x$secFromStart[i] / time.interval + 1] + x$value[i]
totstepsseq[x$secFromStart[i] / time.interval + 2] <- totstepsseq[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
weekdays(x$midtime[1])
x <- stepCount[weekdays(x$midtime) == "Monday"]
x <- stepCount[weekdays(x$midtime) == "Monday",]
# every 5 minutes from the start until the end of our dataset
time.interval = 900
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
time.start <- as.numeric(range(x$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
x$secFromStart <- as.integer(x$midtime) - time.start
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m)
months(x$midtime[1])
x <- stepCount[months(x$midtime) == "September",]
# every 5 minutes from the start until the end of our dataset
time.interval = 900
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
time.start <- as.numeric(range(x$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
x$secFromStart <- as.integer(x$midtime) - time.start
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m)
# Dylan O'Connell
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
stepCount$midtime <- as.POSIXct(stepCount$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
x <- stepCount[months(x$midtime) == "September",]
# every 5 minutes from the start until the end of our dataset
time.interval = 900
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
time.start <- as.numeric(range(x$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
x$secFromStart <- as.integer(x$midtime) - time.start
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
?months
plot(timeseq,rollavg.45m)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
plot(timeseq,rollavg.45m,pct=1)
plot(timeseq,rollavg.45m,pch=1)
warnings()
plot(timeseq,rollavg.45m,pch=1)
plot(timeseq,rollavg.45m,pch=2)
plot(timeseq,rollavg.45m,pch=3)
plot(timeseq,rollavg.45m,pch=4)
plot(timeseq,rollavg.45m,pch=5)
plot(timeseq,rollavg.45m,pch=6)
plot(timeseq,rollavg.45m,pch=7)
plot(timeseq,rollavg.45m,pch=16)
plot(timeseq,rollavg.45m,pch=15)
plot(timeseq,rollavg.45m,pch=1)
x <- distWalked[months(distWalked$midtime) == "September" & TRUE,]
# every 5 minutes from the start until the end of our dataset
time.interval = 900
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
time.start <- as.numeric(range(x$midtime)[1])
# This as.integer will round some mid times up a half second, but this is
# all approximate
x$secFromStart <- as.integer(x$midtime) - time.start
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=1)
stepCOunt$midtime[1]$day
stepCount$midtime[1]$wday
weekday(distWalked$midtime)
weekdays(distWalked$midtime)
x$midtime[1] > x$midtime[2]
x$midtime[2] > x$midtime[1]
start.date <- as.POSIXct("2012-02-01")
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
date(distWalked$midtime)
day(distWalked$midtime)
distWalked$midtime$day
distWalked$midtime$mday
mday(distWalked$midtime)
x <- distWalked[as.Date(distWalked) == as.Date("2016-09-07"),]
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
plot(timeseq,rollavg.45m,pch=16,cex=0.4, xlab="Time", ylab="Miles Travelled", main="Rolling 45 minute average of distance travelled")
plot(timeseq,rollavg.45m,pch=16,cex=0.7,
xlab="Time", ylab="Miles Travelled",
main="Rolling 45 minute average of distance travelled")
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
main="Rolling 45 minute average of distance travelled")
monday.timeseq <- timeseq[weekdays(timeseq)=="Monday"]
?as.Date
as.Time
?as.Time
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday" ,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
x$midtime
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday" ,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
x$midtime
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
timeseq
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday" ,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
main="Rolling 45 minute average of distance travelled")
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
stepCount$midtime <- as.POSIXct(stepCount$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
distWalked$midtime <- as.POSIXct(distWalked$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday" ,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday" ,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday" ,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x <- distWalked[months(distWalked$midtime) == "September" && weekdays(distWalked$midtime) == "Monday",]
x <- distWalked[months(distWalked$midtime) == "September" && weekdays(distWalked$midtime) == "Monday",]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.start <- as.numeric(range(x$midtime)[1])
x <- distWalked[months(distWalked$midtime) == "September" && weekdays(distWalked$midtime) == "Monday",]
x
stepCount <- read.csv("stepCount.csv", as.is=TRUE)
distWalked <- read.csv("distWalked.csv", as.is=TRUE)
flightsClimbed <- read.csv("flightsClimbed.csv", as.is=TRUE)
stepCount$midtime <- as.POSIXct(stepCount$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
distWalked$midtime <- as.POSIXct(distWalked$midtime, format="%Y-%m-%d %H:%M:%S", tz="EST")
x <- distWalked[months(distWalked$midtime) == "September" && weekdays(distWalked$midtime) == "Monday",]
x
weekdays(distWalked$midtime)
months(distWalked$midtime) == "September"
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == "Monday",]
View(x)
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
time.interval = 900
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
main="Rolling 45 minute average of distance travelled")
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
main="Rolling 45m avg of distance, Monday average")
dow <- "Friday"
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == dow,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.interval = 900
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance," dow, "average")
plot(timeseq,rollavg.45m,pch=16,cex=0.55,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average")
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=1,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average")
plot(timeseq,rollavg.45m,pch=16,cex=1,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average"))
paste("Rolling 45m avg of distance,", dow, "average")
plot(timeseq,rollavg.45m,pch=16,cex=1,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average"))
plot(timeseq,rollavg.45m,pch=16,cex=.8,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average"))
plot(timeseq,rollavg.45m,pch=16,cex=.8,
xlab="Time", ylab="Miles Travelled",
xaxp  = c(as.POSIXct("00:00:00", format="%H:%M:%S"), as.POSIXct("24:00:00", format="%H:%M:%S"), 24),
main=paste("Rolling 45m avg of distance,", dow, "average"))
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
dow <- "Saturday"
x <- distWalked[months(distWalked$midtime) == "September" & weekdays(distWalked$midtime) == dow,]
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.interval = 900
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=.8,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average"))
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
View(x)
plotavgbyDOW = function(x, dow){
x <- x[weekdays(distWalked$midtime) == dow,]
#dow <- "Saturday"
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.interval = 900
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
rollavg.45m <- rep(0, length(timeseq))
for(i in 1:length(x$secFromStart)){
rollavg.45m[x$secFromStart[i] / time.interval ] <- rollavg.45m[x$secFromStart[i] / time.interval] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 1] <- rollavg.45m[x$secFromStart[i] / time.interval + 1] + x$value[i]
rollavg.45m[x$secFromStart[i] / time.interval + 2] <- rollavg.45m[x$secFromStart[i] / time.interval + 2] + x$value[i]
}
rollavg.45m <- rollavg.45m[1:length(timeseq)]
plot(timeseq,rollavg.45m,pch=16,cex=.8,
xlab="Time", ylab="Miles Travelled",
main=paste("Rolling 45m avg of distance,", dow, "average"))
}
x <- distWalked[months(distWalked$midtime) == "September",]
View(x)
x <- x[weekdays(distWalked$midtime) == dow,]
#dow <- "Saturday"
x$midtime <- strftime(x$midtime, format="%H:%M:%S")
x$midtime <- as.POSIXct(x$midtime, format="%H:%M:%S")
time.interval = 900
time.start <- as.numeric(range(x$midtime)[1])
x$secFromStart <- as.integer(x$midtime) - time.start
timeseq <- seq(from=range(x$midtime)[1], to=range(x$midtime)[2], by=time.interval)
from=range(x$midtime)[1]
range(x$midtime)[1]
x$midtime
x <- distWalked[months(distWalked$midtime) == "September",]
x$midtime
x <- x[weekdays(distWalked$midtime) == dow,]
x$midtime
x <- distWalked[months(distWalked$midtime) == "September",]
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
as.POSIXct("2016-08-022")
range(distWalked$midtime)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
source('~/Documents/Programming/HealthData/HealthDataAnalysis.R', echo=TRUE)
